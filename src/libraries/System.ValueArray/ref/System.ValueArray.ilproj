<Project Sdk="Microsoft.NET.Sdk.IL">
  <PropertyGroup>
    <TargetFramework>$(NetCoreAppCurrent)</TargetFramework>
    <ILAsmToolPath>$(MSBuildThisFileDirectory)\..\..\..\..\artifacts\bin\coreclr\$(CoreClrOS).$(CoreClrArch).$(Configuration)</ILAsmToolPath>
    <IsTrimmable>false</IsTrimmable>
    <ILLinkTrimAssembly>false</ILLinkTrimAssembly>
    <DebugOptimization>IMPL</DebugOptimization>
    <DebugOptimization Condition="'$(Configuration)' == 'Release'">OPT</DebugOptimization>
    <CoreCompileDependsOn>$(CoreCompileDependsOn);GenerateVersionFile</CoreCompileDependsOn>
    <IlasmFlags>$(IlasmFlags) -DEBUG=$(DebugOptimization)</IlasmFlags>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="System.ValueArray.il" />
    <None Include="System.ValueArray.il" />
    <None Include="System.ValueArray.ref.rc" />
    <None Include="System.ValueArray.ref.res" />
  </ItemGroup>

  <Target Name="GenerateVersionFile" DependsOnTargets="GetAssemblyVersion;ResolveReferences" Inputs="$(MSBuildAllProjects)" Outputs="'$(VersionFilePath)">
   <PropertyGroup>
      <IncludePath>$([MSBuild]::NormalizeDirectory('$(IntermediateOutputPath)', 'version'))</IncludePath>
      <IncludePathTrimmed>$(IncludePath.TrimEnd('\'))</IncludePathTrimmed>
      <IlasmFlags>$(IlasmFlags) -INCLUDE="$(IncludePathTrimmed)"</IlasmFlags>
      <VersionFilePath Condition="'$(VersionFilePath)' == ''">$([MSBuild]::NormalizePath('$(IncludePath)', 'version.h'))</VersionFilePath>
      <_AssemblyVersion>$(AssemblyVersion.Replace('.', ':'))</_AssemblyVersion>
      <_coreAssemblyName Condition="'%(ReferencePath.FileName)' == '$(CoreAssembly)'">%(ReferencePath.FusionName)</_coreAssemblyName>
      <_assemblyNamePattern><![CDATA[[^,]+, Version=(?<v1>[0-9]+)\.(?<v2>[0-9]+)\.(?<v3>[0-9]+)\.(?<v4>[0-9]+), .*PublicKeyToken=(?<p1>[0-9a-f]{2})(?<p2>[0-9a-f]{2})(?<p3>[0-9a-f]{2})(?<p4>[0-9a-f]{2})(?<p5>[0-9a-f]{2})(?<p6>[0-9a-f]{2})(?<p7>[0-9a-f]{2})(?<p8>[0-9a-f]{2})]]></_assemblyNamePattern>
      <_coreAssemblyVersion>$([System.Text.RegularExpressions.Regex]::Replace(
        $(_coreAssemblyName),
        $(_assemblyNamePattern),
        '${v1}:${v2}:${v3}:${v4}'))</_coreAssemblyVersion>
      <_coreAssemblyPublicKeyToken>b0 3f 5f 7f 11 d5 0a 3a</_coreAssemblyPublicKeyToken>
      <_VersionFileContents>
<![CDATA[
#define CORE_ASSEMBLY "System.Runtime"
#define ASSEMBLY_VERSION "$(_AssemblyVersion)"
#define CORE_ASSEMBLY_VERSION "$(_AssemblyVersion)"
#define FILE_VERSION "{string('$(FileVersion)')}"
#define INFORMATIONAL_VERSION "{string('$(InformationalVersion)')}"
$(ExtraMacros)
// Metadata version: v4.0.30319
.assembly extern CORE_ASSEMBLY
{
  .publickeytoken = ($(_coreAssemblyPublicKeyToken) )
  .ver CORE_ASSEMBLY_VERSION
}
 ]]>      
      </_VersionFileContents>
    </PropertyGroup>

    <WriteLinesToFile File="$(VersionFilePath)" Lines="$(_VersionFileContents)" Overwrite="true" WriteOnlyWhenDifferent="true" />

    <ItemGroup>
      <FileWrites Include="$(VersionFilePath)" />
    </ItemGroup>
  </Target>

  <!-- Decompile the ILResourceReference to get native resources. -->
  <Target Name="SetILResourceReference"
          BeforeTargets="DisassembleIlasmResourceFile"
          Condition="'$(OS)' == 'Windows_NT'">

    <PropertyGroup>
      <!-- Try to use cvtres.exe from the framework and fallback to the one that is on the PATH in case we can't find it -->
      <_CvtResCommand>$(SystemRoot)\Microsoft.NET\Framework\v4.0.30319\cvtres.exe</_CvtResCommand>
      <_CvtResCommand Condition="!Exists('$(_CvtResCommand)')">cvtres.exe</_CvtResCommand>
      <_CvtResCommand>$(_CvtResCommand) /MACHINE:x86</_CvtResCommand>
      <_CvtResCommand>$(_CvtResCommand) /OUT:"$(IntermediateOutputPath)$(MSBuildProjectName).ref.res.obj"</_CvtResCommand>
      <_CvtResCommand>$(_CvtResCommand) "$(IntermediateOutputPath)$(MSBuildProjectName).ref.res"</_CvtResCommand>
      <IlasmResourceFile>$(IntermediateOutputPath)$(MSBuildProjectName).ref.res.obj</IlasmResourceFile>
    </PropertyGroup>
    <Copy SourceFiles="System.ValueArray.ref.res" DestinationFolder="$(IntermediateOutputPath)" />
    <Exec Command="$(_CvtResCommand)" />
  </Target>

</Project>
